<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shiliu.game.dao.UserRecordMapper" >
  <resultMap id="BaseResultMap" type="com.shiliu.game.domain.UserRecord" >
    <id column="user_record_id" property="userRecordId" jdbcType="BIGINT" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="game_id" property="gameId" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="award" property="award" jdbcType="VARCHAR" />
    <result column="play_time" property="playTime" jdbcType="TIMESTAMP" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="reserved1" property="reserved1" jdbcType="VARCHAR" />
    <result column="reserved2" property="reserved2" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectAll" resultMap="BaseResultMap" >
  	select 
  		user_record_id, open_id, game_id, 
  		phone, award, play_time, nick_name, reserved1, 
    	reserved2  from user_record 
  </select>
  <select id="selectAward" resultMap="BaseResultMap" >
  		select 
  		user_record_id, open_id, game_id, 
  		phone, award, play_time, nick_name, reserved1, 
    	reserved2  from user_record where award!= 0;
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_record_id, open_id, game_id, phone, award, play_time, nick_name, reserved1, 
    reserved2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shiliu.game.domain.UserRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_record
    where user_record_id = #{userRecordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_record
    where user_record_id = #{userRecordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shiliu.game.domain.UserRecordExample" >
    delete from user_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shiliu.game.domain.UserRecord" >
    insert into user_record (user_record_id, open_id, game_id, 
      phone, award, play_time, 
      nick_name, reserved1, reserved2
      )
    values (#{userRecordId,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{gameId,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{award,jdbcType=VARCHAR}, #{playTime,jdbcType=TIMESTAMP}, 
      #{nickName,jdbcType=VARCHAR}, #{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shiliu.game.domain.UserRecord" >
    insert into user_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userRecordId != null" >
        user_record_id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="gameId != null" >
        game_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="award != null" >
        award,
      </if>
      <if test="playTime != null" >
        play_time,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="reserved1 != null" >
        reserved1,
      </if>
      <if test="reserved2 != null" >
        reserved2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userRecordId != null" >
        #{userRecordId,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null" >
        #{gameId,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="award != null" >
        #{award,jdbcType=VARCHAR},
      </if>
      <if test="playTime != null" >
        #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null" >
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null" >
        #{reserved2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shiliu.game.domain.UserRecordExample" resultType="java.lang.Integer" >
    select count(*) from user_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_record
    <set >
      <if test="record.userRecordId != null" >
        user_record_id = #{record.userRecordId,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.gameId != null" >
        game_id = #{record.gameId,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.award != null" >
        award = #{record.award,jdbcType=VARCHAR},
      </if>
      <if test="record.playTime != null" >
        play_time = #{record.playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved1 != null" >
        reserved1 = #{record.reserved1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved2 != null" >
        reserved2 = #{record.reserved2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_record
    set user_record_id = #{record.userRecordId,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      game_id = #{record.gameId,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      award = #{record.award,jdbcType=VARCHAR},
      play_time = #{record.playTime,jdbcType=TIMESTAMP},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      reserved1 = #{record.reserved1,jdbcType=VARCHAR},
      reserved2 = #{record.reserved2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shiliu.game.domain.UserRecord" >
    update user_record
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null" >
        game_id = #{gameId,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="award != null" >
        award = #{award,jdbcType=VARCHAR},
      </if>
      <if test="playTime != null" >
        play_time = #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null" >
        reserved1 = #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null" >
        reserved2 = #{reserved2,jdbcType=VARCHAR},
      </if>
    </set>
    where user_record_id = #{userRecordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shiliu.game.domain.UserRecord" >
    update user_record
    set open_id = #{openId,jdbcType=VARCHAR},
      game_id = #{gameId,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      award = #{award,jdbcType=VARCHAR},
      play_time = #{playTime,jdbcType=TIMESTAMP},
      nick_name = #{nickName,jdbcType=VARCHAR},
      reserved1 = #{reserved1,jdbcType=VARCHAR},
      reserved2 = #{reserved2,jdbcType=VARCHAR}
    where user_record_id = #{userRecordId,jdbcType=BIGINT}
  </update>
</mapper>